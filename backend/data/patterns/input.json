{
  "id": "shadcn-input",
  "name": "Input",
  "category": "form",
  "description": "A text input component with validation states and accessibility features from shadcn/ui",
  "framework": "react",
  "library": "shadcn/ui",
  "code": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }",
  "metadata": {
    "types": [
      {
        "name": "text",
        "description": "Standard text input"
      },
      {
        "name": "email",
        "description": "Email input with validation"
      },
      {
        "name": "password",
        "description": "Password input with masked characters"
      },
      {
        "name": "number",
        "description": "Numeric input"
      },
      {
        "name": "tel",
        "description": "Telephone number input"
      },
      {
        "name": "url",
        "description": "URL input with validation"
      },
      {
        "name": "search",
        "description": "Search input with clear button"
      },
      {
        "name": "file",
        "description": "File upload input with custom styling"
      }
    ],
    "props": [
      {
        "name": "type",
        "type": "string",
        "optional": true,
        "default": "text",
        "description": "HTML input type"
      },
      {
        "name": "placeholder",
        "type": "string",
        "optional": true,
        "description": "Placeholder text"
      },
      {
        "name": "disabled",
        "type": "boolean",
        "optional": true,
        "description": "Disable input interaction"
      },
      {
        "name": "value",
        "type": "string",
        "optional": true,
        "description": "Controlled input value"
      },
      {
        "name": "defaultValue",
        "type": "string",
        "optional": true,
        "description": "Uncontrolled input default value"
      },
      {
        "name": "onChange",
        "type": "function",
        "optional": true,
        "description": "Change event handler"
      },
      {
        "name": "className",
        "type": "string",
        "optional": true,
        "description": "Additional CSS classes"
      }
    ],
    "styling": {
      "height": "40px (h-10)",
      "width": "100% (w-full)",
      "padding": "12px horizontal, 8px vertical",
      "borderRadius": "0.375rem (6px)",
      "fontSize": "0.875rem (14px)",
      "border": "1px solid input border color",
      "background": "background color (theme-based)",
      "states": {
        "focus": "2px ring with ring color and offset",
        "disabled": "50% opacity, not-allowed cursor",
        "placeholder": "muted-foreground color"
      }
    },
    "a11y": {
      "features": [
        "Native HTML input semantics",
        "Keyboard navigation support",
        "Focus visible ring indicator",
        "Disabled state with visual feedback",
        "Screen reader compatible",
        "Proper contrast ratios"
      ],
      "recommendations": [
        "Always use with <label> element for accessibility",
        "Use aria-describedby for error messages",
        "Use aria-invalid for validation states",
        "Provide clear placeholder text",
        "Use proper input types for better mobile UX"
      ]
    },
    "dependencies": [
      "clsx",
      "tailwind-merge"
    ],
    "usage_examples": [
      {
        "title": "Basic Text Input",
        "code": "<Input type=\"text\" placeholder=\"Enter your name\" />"
      },
      {
        "title": "Email Input with Label",
        "code": "<div className=\"grid w-full max-w-sm items-center gap-1.5\">\n  <label htmlFor=\"email\">Email</label>\n  <Input type=\"email\" id=\"email\" placeholder=\"Email\" />\n</div>"
      },
      {
        "title": "Password Input",
        "code": "<Input type=\"password\" placeholder=\"Enter password\" />"
      },
      {
        "title": "Disabled Input",
        "code": "<Input disabled placeholder=\"Disabled input\" />"
      },
      {
        "title": "Input with Validation Error",
        "code": "<div>\n  <Input\n    type=\"email\"\n    placeholder=\"Email\"\n    aria-invalid=\"true\"\n    aria-describedby=\"email-error\"\n    className=\"border-destructive\"\n  />\n  <p id=\"email-error\" className=\"text-sm text-destructive mt-1\">\n    Please enter a valid email address\n  </p>\n</div>"
      },
      {
        "title": "File Upload Input",
        "code": "<Input type=\"file\" />"
      }
    ]
  }
}
